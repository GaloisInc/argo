name: argo

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc-ver: ["8.6.5", "8.8.4", "8.10.7", "9.0.2"]
      # complete all jobs
      fail-fast: false
    name: Argo - GHC v${{ matrix.ghc-ver }} - ubuntu-latest
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - uses: abatilo/actions-poetry@v2.1.4
      with:
        poetry-version: 1.1.11
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Get GHC
      uses: haskell/actions/setup@v1
      id: setup-haskell
      with:
        ghc-version: ${{ matrix.ghc-ver }}
    - name: Cache
      uses: actions/cache@v1
      with:
        path: /home/runner/.cabal/store/ghc-${{ matrix.ghc-ver }}
        # Prefer previous SHA hash if it is still cached
        key: linux-${{ matrix.ghc-ver }}-${{ hashFiles('cabal.project.freeze') }}-${{ github.sha }}
        # otherwise just use most recent build.
        restore-keys: linux-${{ matrix.ghc-ver }}-${{ hashFiles('cabal.project.freeze') }}
    - name: Cabal update
      run: cabal update
      # Build macaw-base dependencies and crucible separately just so later
      # steps are less verbose and major dependency failures are separate.
    - name: Install python dependencies
      working-directory: ./python
      # see https://github.com/python-poetry/poetry/issues/4210 for new-installer workaround details below
      run: |
        poetry config experimental.new-installer false
        poetry install
    - name: Typecheck python code
      working-directory: ./python
      run: poetry run mypy argo_client
    - name: Build
      run: |
        cabal build all
    - name: Cabal argo tests
      run: cabal test argo
    - name: Python argo-client unit tests
      working-directory: ./python
      run: poetry run python -m unittest discover --verbose tests
